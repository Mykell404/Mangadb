swagger: "2.0"
info:
  description: |
    MangaDB allows you to easily keep track of the mangas you are reading,
    want to read, and have already finished reading.

    If you have any questions or want to contribute then [![Gitter](https://badges.gitter.im/Rafase282/Mangadb.svg)](https://gitter.im/Rafase282/Mangadb?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)

    For this sample, you can use the api key `special-key` to test the authorization filters
  version: "1.0.0"
  title: MangaDB Swagger
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: rafase282@gmail.com
  license:
    name: MIT
    url: https://github.com/Rafase282/Mangadb/blob/master/LICENSE
host: petstore.swagger.io
basePath: /v2
schemes:
  - https
consumes:
  - application/x-www-form-urlencoded
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    name: x-access-token
    in: header
    description: This is actually a JSON Web Token (JWT) and it is required for all secured routes. There is an admin and regular users.
paths:
  /auth:
    post:
      tags:
        - mangas
      summary: Authenticates existing users for using the API for one hour.
      description: This route does notrequires a JWT, but instead provides one for the user that expires in one hour. The  response provides the JWT along with some useful information.
      operationId: getToken
      parameters:
        - in: formData
          name: username
          description: Target username.
          required: true
          type: string
        - in: formData
          name: password
          description: Target username.
          required: true
          type: string
          format: password
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/Auth'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        403:
          description: No token provided
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Error'
  /mangas:
    get:
      tags:
        - mangas
        - admin
      summary: Get a list of all mangas on the database.
      description: "Handle manga requests"
      operationId: getAllMangas
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
  /mangas/{user}:
    get:
      tags:
        - mangas
      summary: Get a list of all mangas on the database for the specified user.
      description: "Handle manga requests"
      operationId: getAlluserMangas
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    post:
      tags:
        - mangas
      summary: Creates manga.
      description: "Handle manga requests"
      operationId: createmanga
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
        - in: formData
          name: title
          description: Target username.
          required: true
          type: string
        - in: formData
          name: author
          description: Target username.
          required: true
          type: string
        - in: formData
          name: url
          description: Target username.
          required: true
          type: string
        - in: formData
          name: userStatus
          description: Target username.
          required: true
          type: string
        - in: formData
          name: type
          description: Target username.
          required: true
          type: string
        - in: formData
          name: categories
          description: Target username.
          required: true
          type: string
        - in: formData
          name: chapter
          description: Target username.
          required: true
          type: integer
          format: int32
        - in: formData
          name: seriesStatus
          description: Target username.
          required: true
          type: string
        - in: formData
          name: plot
          description: Target username.
          required: true
          type: string
        - in: formData
          name: altName
          description: Target username.
          required: true
          type: string
        - in: formData
          name: direction
          description: Target username.
          required: true
          type: string
        - in: formData
          name: thumbnail
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    delete:
      tags:
        - mangas
      summary: Deletes mangas from target user
      description: "The passwords are encrypted."
      operationId: deleteMangasbyuser
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
  /mangas/{user}/{title}:
    get:
      tags:
        - mangas
      summary: Get information on a specific user's managa by title.
      description: "Handle manga requests"
      operationId: getMangabyId
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
        - in: path
          name: title
          description: Target manga title.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    put:
      tags:
        - mangas
      summary: Get information on a specific user's managa by title.
      description: "Handle manga requests"
      operationId: updateMangabyId
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
        - in: path
          name: title
          description: Target manga title.
          required: true
          type: string

      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    delete:
      tags:
        - mangas
      summary: Deletes target manga.
      description: "The passwords are encrypted."
      operationId: deleteUserbyUsername
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
        - in: path
          name: title
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
  /users:
    get:
      tags:
        - users
        - admin
      summary: Get a list of all the users in the database.
      description: "Handle manga requests"
      operationId: getAllusers
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    post:
      tags:
        - mangas
      summary: Creates User.
      description: "Handle manga requests"
      operationId: createuser
      parameters:
        - in: formData
          name: username
          description: Target username.
          required: true
          type: string
        - in: formData
          name: password
          description: Target username.
          required: true
          type: string
          format: password
        - in: formData
          name: email
          description: Target username.
          required: true
          type: string
        - in: formData
          name: firstname
          description: Target username.
          required: true
          type: string
        - in: formData
          name: lastname
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    delete:
      tags:
        - users
      summary: Deletes all users.
      description: "The passwords are encrypted."
      operationId: deleteusers
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
  /users/{user}:
    get:
      tags:
        - users
      summary: Get specified user's data.
      description: "The passwords are encrypted."
      operationId: getUserbyUsername
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    put:
      tags:
        - users
      summary: Get information on a specific user's managa by title.
      description: "Handle manga requests"
      operationId: updateuser
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
    delete:
      tags:
        - users
        - admin
      summary: Deletes target user.
      description: "The passwords are encrypted."
      operationId: deleteMangabyTitle
      parameters:
        - in: path
          name: user
          description: Target username.
          required: true
          type: string
      responses:
        "405":
          description: Invalid input
      security:
        - api_key: []
definitions:
  User:
    type: object
    required: [username, password, email, firstname, lastname]
    properties:
      username:
        description: The username has to be unique.
        type: string
      password:
        description: There are no limitations.
        type: string
        format: password
      email:
        description: There are no limitations.
        type: string
      firstname:
        description: Only letters are allowed.
        type: string
      lastname:
        description: Only letters are allowed.
        type: string
  Manga:
    type: object
    required: [title, author, url, userStatus, type, categories, chapter, seriesStatus, plot, direction, thumbnail]
    properties:
      title:
        type: string
      author:
        type: string
      url:
        type: string
      userStatus:
        type: string
        description: It must be either of 'reading', 'finished' or 'will read'.
      type:
        type: string
      categories:
        type: string
        description: It will be a string that will be turned into an array separated by commas.
      chapter:
        type: integer
        format: int32
      seriesStatus:
        type: string
        description: It must be either of 'ongoing' or 'completed'.
      plot:
        type: string
      altName:
        type: string
        description: It will be a string that will be turned into an array separated by commas.
      direction:
        type: string
        description: It must be either of 'left to right' or 'right to left'.
      userId:
        type: string
        description: This is obtained internally.
      username:
        type: string
        description: This is obtained internally.
      thumbnail:
        type: string
  Auth:
    type: object
    properties:
      success:
        type: boolean
        description: True or false depending of the code.
      message:
        type: string
        description: Message reporting action status.
      data:
        type: string
        description: It will be either null or the data.
  Default:
    type: object
    properties:
      success:
        type: boolean
        description: True or false depending of the code.
      message:
        type: string
        description: Message reporting action status.
      data:
        type: array
        description: It will be either null or the data.
        items:
          $ref: '#/definitions/Manga'
  Error:
    type: object
    properties:
      success:
        type: boolean
        description: True or false depending of the code.
      message:
        type: string
        description: Message reporting action status.
      data:
        type: object
        description: It is actually null.
